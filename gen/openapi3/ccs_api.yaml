---
openapi: 3.0.4
servers:
- description: generated server for API::Endpoint
  url: api.services.crowncommercial.gov.uk
info:
  title: API::Endpoint
  description: genearated endpoint for data API::Endpoint
  version: 0.1.5
  contact:
    email: admin@ccs.gov.uk
  license:
    name: MIT
    url: https://github.com/Crown-Commercial-Service/ccs-data-model/blob/master/LICENSE
tags:
- name: browser
  description: for all users, typically buyers
- name: recorder
  description: for record updaters, often suppliers
paths:
  "/api/v0/Agreement":
    get:
      tags:
      - browser
      summary: search Agreement
      operationId: search-Agreement
      description: searches Agreement by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_version_id"
      - "$ref": "#/components/parameters/q_supercedes_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Agreements"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Agreement
      operationId: create-Agreement
      description: add a new Agreement and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the new Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/v0/Agreement/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Agreement
      description: retrieve Agreement by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        '303':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) Agreement
      operationId: revise-Agreement
      description: replace an existing Agreement given its id, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the updated Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        '303':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) Agreement
      operationId: revise-Agreement
      description: update an existing Agreement given its id, updating only the supplied
        fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the elements of  Agreement to be updated
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        '303':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/v0/ItemType":
    get:
      tags:
      - browser
      summary: search ItemType
      operationId: search-ItemType
      description: searches ItemType by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_version_id"
      - "$ref": "#/components/parameters/q_supercedes_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/ItemTypes"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new ItemType
      operationId: create-ItemType
      description: add a new ItemType and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the new ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/v0/ItemType/{id}":
    get:
      tags:
      - recorder
      summary: get an existing ItemType
      description: retrieve ItemType by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        '303':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) ItemType
      operationId: revise-ItemType
      description: replace an existing ItemType given its id, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the updated ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        '303':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) ItemType
      operationId: revise-ItemType
      description: update an existing ItemType given its id, updating only the supplied
        fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the elements of  ItemType to be updated
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        '303':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/v0/Party":
    get:
      tags:
      - browser
      summary: search Party
      operationId: search-Party
      description: searches Party by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Partys"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Party
      operationId: create-Party
      description: add a new Party and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        description: body should be the new Party
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
  "/api/v0/Party/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Party
      description: retrieve Party by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        '303':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) Party
      operationId: revise-Party
      description: replace an existing Party given its id, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        description: body should be the updated Party
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        '303':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) Party
      operationId: revise-Party
      description: update an existing Party given its id, updating only the supplied
        fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        description: body should be the elements of  Party to be updated
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        '303':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
  "/api/v0/Contact":
    get:
      tags:
      - browser
      summary: search Contact
      operationId: search-Contact
      description: searches Contact by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_title"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Contacts"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Contact
      operationId: create-Contact
      description: add a new Contact and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
        description: body should be the new Contact
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
  "/api/v0/Contact/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Contact
      description: retrieve Contact by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        '303':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) Contact
      operationId: revise-Contact
      description: replace an existing Contact given its id, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
        description: body should be the updated Contact
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        '303':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) Contact
      operationId: revise-Contact
      description: update an existing Contact given its id, updating only the supplied
        fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
        description: body should be the elements of  Contact to be updated
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        '303':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
  "/api/v0/Questionnaire":
    get:
      tags:
      - browser
      summary: search Questionnaire
      operationId: search-Questionnaire
      description: searches Questionnaire by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_version_id"
      - "$ref": "#/components/parameters/q_supercedes_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Questionnaires"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Questionnaire
      operationId: create-Questionnaire
      description: add a new Questionnaire and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Questionnaire"
        description: body should be the new Questionnaire
      responses:
        '200':
          "$ref": "#/components/responses/Questionnaire"
        4XX:
          description: error TODO
  "/api/v0/Questionnaire/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Questionnaire
      description: retrieve Questionnaire by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Questionnaire"
        '303':
          "$ref": "#/components/responses/Questionnaire"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) Questionnaire
      operationId: revise-Questionnaire
      description: replace an existing Questionnaire given its id, creating a new
        version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Questionnaire"
        description: body should be the updated Questionnaire
      responses:
        '200':
          "$ref": "#/components/responses/Questionnaire"
        '303':
          "$ref": "#/components/responses/Questionnaire"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) Questionnaire
      operationId: revise-Questionnaire
      description: update an existing Questionnaire given its id, updating only the
        supplied fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Questionnaire"
        description: body should be the elements of  Questionnaire to be updated
      responses:
        '200':
          "$ref": "#/components/responses/Questionnaire"
        '303':
          "$ref": "#/components/responses/Questionnaire"
        4XX:
          description: error TODO
  "/api/v0/Offering":
    get:
      tags:
      - browser
      summary: search Offering
      operationId: search-Offering
      description: searches Offering by name, version, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_version_id"
      - "$ref": "#/components/parameters/q_supercedes_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Offerings"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Offering
      operationId: create-Offering
      description: add a new Offering and retrieve copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Offering"
        description: body should be the new Offering
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
  "/api/v0/Offering/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Offering
      description: retrieve Offering by id or version id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        '303':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (replace) Offering
      operationId: revise-Offering
      description: replace an existing Offering given its id, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Offering"
        description: body should be the updated Offering
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        '303':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
    patch:
      tags:
      - recorder
      summary: patch (revise) Offering
      operationId: revise-Offering
      description: update an existing Offering given its id, updating only the supplied
        fields, creating a new version
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Offering"
        description: body should be the elements of  Offering to be updated
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        '303':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
components:
  schemas:
    Agreement:
      type: object
      required:
      - id
      - name
      properties:
        version_id:
          type: string
          example: 90ccab31-84fb-486c-84ba-77a66ff686ea
          description: UUID of this version of the entry
        supercedes_id:
          type: string
          example: e030f1b1-647d-4ed7-8d84-ac9790563362
          description: UUID of this version superceded. May be empty only if this
            is the  first version
        datetime:
          type: string
          format: date
          example: '2019-09-28T18:34:23.45Z'
          description: 'Date of creation or update of this record, date of creation
            of this version. '
        checksum:
          type: string
          example: 90b4c251f8649a4f9c86d6d20ee6e9e9
          description: MD5 checksum of the record
        url:
          type: string
          example: api.services.crowncommercial.gov.uk/api/Agreement/rm-RM1234
          description: URL which will retreive this version of the record
        kind:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes.json#framework
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes.json#lot
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes.json#callof
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes.json#contract
          example: :framework
          description: Kind of agreement, such as Framework, Lot,Contract. Lots are
            considered separateagreements, but link to their owning framework agreement.
            Similarly Contracts should link to anylot that they are based on. See
            https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes.json
            for details.
        id:
          type: string
          example: rm:RM3541
          description: id of agreeement; This is the RM number for a framework, and
            {RM#lotnumber} for a lot
        id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#ccs_fw_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#lot_number
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#cf_contract_id
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#ccs_fw_id
          description: who to identify the agreement
        keyword:
          type: array
          items:
            type: string
          description: other names for the agreement
        name:
          type: string
          example: Supply Teachers
          description: ''
        long_name:
          type: string
          example: Supply Teachers Framework 2018
          description: ''
        status:
          type: string
          enum:
          - live
          - inactive
          - future
          - planned
          - underway
          - withdrawn
          - ended
          description: current status of agreementSee https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_status_codes.json
            for details.
        description:
          type: string
          description: Describe the agreement
        start_date:
          type: string
          format: date
          example: '2019-01-01'
          description: ''
        end_date:
          type: string
          format: date
          example: '2020-01-10'
          description: ''
        duration:
          type: integer
          example: 5
          description: Months
        org_structure_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_org.json
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_org.json
          description: 'Standard identifying prefixes for organisation responbsible
            for this agreement. '
        owning_org_unit_name:
          type: array
          items:
            type: string
          example: ccs_org:pillar_buildings
          description: Commercial category org unit responsible for this agreement.
            Usually the CCS pillar name and a category name
        owner_id:
          type: array
          items:
            type: string
          example: emailexample_owner@crowncommercial.gov.uk
          description: Individual accountable for the agreement
        restriction:
          "$ref": "#/components/schemas/Restriction"
        part_of_id:
          type: string
          description: 'Agreement this is part of; typically applicable only to *Lots*. '
        conforms_to_id:
          type: string
          description: Agreement this conforms to, such as a Contract conforming to
            a Framework
        item_type:
          type: array
          items:
            "$ref": "#/components/schemas/ItemType"
        min_value:
          type: integer
          description: Minimum value of award, in pounds sterling
        max_value:
          type: integer
          description: Maximum value of award, in pounds sterling
      description: General definition of Commercial Agreements
    ItemType:
      type: object
      required:
      - id
      - name
      properties:
        version_id:
          type: string
          example: 90ccab31-84fb-486c-84ba-77a66ff686ea
          description: UUID of this version of the entry
        supercedes_id:
          type: string
          example: e030f1b1-647d-4ed7-8d84-ac9790563362
          description: UUID of this version superceded. May be empty only if this
            is the  first version
        datetime:
          type: string
          format: date
          example: '2019-09-28T18:34:23.45Z'
          description: 'Date of creation or update of this record, date of creation
            of this version. '
        checksum:
          type: string
          example: 90b4c251f8649a4f9c86d6d20ee6e9e9
          description: MD5 checksum of the record
        url:
          type: string
          example: api.services.crowncommercial.gov.uk/api/Agreement/rm-RM1234
          description: URL which will retreive this version of the record
        id:
          type: string
          example: CPV:37000000-8:CCS:2019-01:1
          description: The composite code string which identifies this item, which
            must be unique across all standards. This should be prefixed with the
            primary *classification_standard* code
        name:
          type: string
          description: a short name to help understand the item
        description:
          type: string
          description: long description of the item, which should match item descriptions
            in it's specification.
        keyword:
          type: array
          items:
            type: string
          description: alternate names for the item type, which may help to find it.
        classification_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpv
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpvs
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#gsin
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#unspsc
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpv
          description: The classiciation standard id, which links to an entry in https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json.
            The item's id must be prefixed correctly for the classification, and be
            unique.
        classification:
          type: string
          example: CPV:37000000-8
          description: 'Code within the primary standard defining this type. Each
            code should have a prefix as defined in *classification_standard*. '
        supplementary_classification_standards:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpv
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpvs
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#gsin
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#unspsc
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_standard.json#cpc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/course_related_codes.json
          description: 'Additional ways to classify the item, which may also provide
            standards for supplementary data in offerings. '
        additional_classifications:
          type: array
          items:
            type: string
          example: CPV:37000000-8
          description: Code within the primary standard defining this type. Each code
            should have a prefix identifying the standard
        unit_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_standard.json#uncefact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_standard.json#qudt
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_standard.json#qudt
          description: 'Define the unit standard, from the standards in https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_standard.json '
        unit:
          type: string
          example: qudt:unit:SquareMeterPerKelvin
          description: 'Define the units used to quantify the item, based on the unit
            standard selected. '
        currency:
          type: string
          example: GBP
          description: define the currency of the per-unit-price, as ISO 4217 currency
            code. If absent, presume GDP,
        supplier_qualification_standard:
          type: array
          items:
            type: string
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/apprenticeship_qualification_questionnaire_standard.json
          description: 'standards describing qualifications required by suppliers
            in order to offer solutions against this item. '
      description: Defines the items that can be offered in certain agreements. *Agreement*s
        can have a number of items that can have values detailing  the agreement.
        The Items shouldconstrain the key quantifiable elements of an agreement award,
        as defined by a supplier's offering against that agreement.
    Party:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          example: sf_org_id:455677
          description: " such as URN; could match salesforce ID; master key "
        org_id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dun
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dfe
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          description: ''
        supplementary_org_id_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dun
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dfe
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
          description: ''
        supplementary_org_id:
          type: array
          items:
            type: string
          example: companies_house:12345
          description: ''
        parent_org_id:
          type: string
          example: companies_house:78901
          description: " URN, should match one of the standards listed "
        org_name:
          type: string
          description: interesting organisation
        sector_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_sector_codes.json
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/sector_standard.json#other
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_sector_codes.json
          description: ''
        sector:
          type: array
          items:
            type: string
          example: ccs_sector_codes:education_funded
          description: ''
        trading_name:
          type: string
          description: " Salesforce only stores for supplier. "
        spend_this_year:
          type: number
          format: float
          example: 1000.0
          description: " Salesforce only stores this for buyers. "
        contact_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#sf_contact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#email
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#sf_contact
          description: ''
        account_manager_id:
          type: string
          example: sf_contact:45623456
          description: " Who manages the account for CCS "
      description: The party is used to identify buyers and suppliers. Since some
        organisations act asboth buyers and suppliers we use the same record for both,
        but most organisations willbe one or the other. The onvolvement of the party
        with an agreement determine the role inthat contenxt.
    Contact:
      type: object
      required:
      - id
      - name
      properties:
        contact_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#sf_contact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#email
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#sf_contact
          description: ''
        id:
          type: string
          description: " a newly minted UUID for CMp "
        supplementary_contact_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#sf_contact
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_standard.json#email
          description: ''
        supplementary_contact_id:
          type: array
          items:
            type: string
          description: ''
        org_id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dun
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dfe
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          description: ''
        party_id:
          type: string
          example: sf_org_id:455677
          description: " contact is a link for this party "
        role:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_roles.json#org_administrator
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_roles.json#ccs_admin
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_roles.json#commercial_contact
          example: contact_roles:org_administrator
          description: " role for CMp "
        first_name:
          type: string
          description: ''
        last_name:
          type: string
          description: ''
        title:
          type: string
          description: " Salesforce; not sure what the constrainst are "
        job_title:
          type: string
          description: " Salesforce; free text "
        department:
          type: string
          description: " Salesforce - department within org, rather than gov "
        address:
          "$ref": "#/components/schemas/Address"
        phone:
          type: array
          items:
            type: string
          description: " phone of the contact point; salesforce only supports one "
        email:
          type: array
          items:
            type: string
          description: " email of the contact point; salesforce only supports two "
        origin:
          type: string
          description: " from Salesforce - where the data was entered "
        notes:
          type: string
          description: " from Salesforce "
        status:
          type: string
          description: " from Salesforce, 'Active' "
        user_research_participant:
          type: string
          description: " Y / N : from Salesforce "
        not_to_receive_ccs_emails:
          type: string
          description: " Y / N : from Salesforce "
        contact_owner:
          type: string
          description: " from Salesforce "
        org_structure_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_org.json
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_org.json
          description: 'Standard identifying prefixes for organisation responbsible
            for this agreement. '
        org_unit:
          type: array
          items:
            type: string
          example: ccs_orgpillar_buildings
          description: 'Category org unit responsible for this agreement. '
      description: 'A way of contacting a party. Store contacts in a safe identity
        store. Do not store personal details elsewhere. '
    Questionnaire:
      type: object
      required:
      - id
      - name
      properties:
        version_id:
          type: string
          example: 90ccab31-84fb-486c-84ba-77a66ff686ea
          description: UUID of this version of the entry
        supercedes_id:
          type: string
          example: e030f1b1-647d-4ed7-8d84-ac9790563362
          description: UUID of this version superceded. May be empty only if this
            is the  first version
        datetime:
          type: string
          format: date
          example: '2019-09-28T18:34:23.45Z'
          description: 'Date of creation or update of this record, date of creation
            of this version. '
        checksum:
          type: string
          example: 90b4c251f8649a4f9c86d6d20ee6e9e9
          description: MD5 checksum of the record
        url:
          type: string
          example: api.services.crowncommercial.gov.uk/api/Agreement/rm-RM1234
          description: URL which will retreive this version of the record
        id:
          type: string
          example: uuid
          description: UUID for the questionnaire entry
        org_id:
          type: string
          example: sf_org_id:455677
          description: " such as URN; could match salesforce ID; master key "
        org_id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dun
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dfe
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          description: ''
        completed:
          type: string
          format: date
          example: '2018-7-7'
          description: ''
        expires:
          type: string
          format: date
          example: '2020-7-6'
          description: ''
        question_standards:
          type: array
          items:
            type: string
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/apprenticeship_qualification_questionnaire_standard.json
          description: The coding standards for the questions and answers
        question:
          type: array
          items:
            "$ref": "#/components/schemas/Question"
      description: A managed set of qualification questions andwered at a point in
        time for a period of time
    Offering:
      type: object
      required:
      - id
      - name
      properties:
        version_id:
          type: string
          example: 90ccab31-84fb-486c-84ba-77a66ff686ea
          description: UUID of this version of the entry
        supercedes_id:
          type: string
          example: e030f1b1-647d-4ed7-8d84-ac9790563362
          description: UUID of this version superceded. May be empty only if this
            is the  first version
        datetime:
          type: string
          format: date
          example: '2019-09-28T18:34:23.45Z'
          description: 'Date of creation or update of this record, date of creation
            of this version. '
        checksum:
          type: string
          example: 90b4c251f8649a4f9c86d6d20ee6e9e9
          description: MD5 checksum of the record
        url:
          type: string
          example: api.services.crowncommercial.gov.uk/api/Agreement/rm-RM1234
          description: URL which will retreive this version of the record
        id:
          type: string
          example: db1fa9ac-1b83-4c27-8c80-ded2f0120c54
          description: unique uuid for the offering
        agreement_id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#ccs_fw_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#lot_number
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#cf_contract_id
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_standard.json#ccs_fw_id
          description: who to identify the agreement
        agreement_id:
          type: string
          description: The agreement this offering relates to
        supplier_id_standard:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#sf_org_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#companies_house
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dun
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_standard.json#dfe
          description: ''
        supplier_id:
          type: string
          example: comphouse:12345678
          description: ''
        name:
          type: string
          description: ''
        description:
          type: string
          description: ''
        item:
          type: array
          items:
            "$ref": "#/components/schemas/Item"
        supplementary:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          example: education_ratings_standard:course_start_date
        branch:
          type: array
          items:
            type: string
          description: Id of contact point where the offering can occur; contact should
            include address details.
      description: " Supplier offering against an item or items of an agreement.This
        may be extended for different agreements. A supplier may provide additionalvariable
        facts in their Offer to supplement the description of how they support the
        agreement. "
    Restriction:
      type: object
      required:
      - id
      - name
      properties:
        sector_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_sector_codes.json
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/sector_standard.json#other
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/ccs_sector_codes.json
          description: The sector standard id
        sector_id:
          type: array
          items:
            type: string
          example: ccs_sector_codes:education_funded
          description: The sector standard ids that define to whom the item may be
            sold. Prefix must match one of the standards.
        location_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_standard.json#nuts_2016
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_standard.json#postcode_radius
          example: "[https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_standard.json#nuts_2016]"
          description: The standards for identifying locations
        location_id:
          type: array
          items:
            type: string
          example: UKH1
          description: The location standard ids that defines  where the items can
            be offered.
      description: a type with a number of classification attributes, such as sector,
        location
    Address:
      type: object
      required:
      - id
      - name
      properties:
        street:
          type: string
          example: 1 fogg street
          description: ''
        address_2:
          type: string
          example: ''
          description: ''
        town:
          type: string
          example: London
          description: ''
        county:
          type: string
          description: ''
        country:
          type: string
          description: ''
        postcode:
          type: string
          example: SW1 1HQ
          description: ''
        latitutde:
          type: string
          description: " Location from the address for geo search "
        longtitude:
          type: string
          description: " Location from the address for geo search "
      description: "\n Address should include at least address line 1 and ideally
        post code.\n will contain lat / long if we have derived it.\n "
    Question:
      type: object
      required:
      - id
      - name
      properties:
        classification:
          type: string
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/apprenticeship_qualification_questionnaire_standard.json
          description: coded answers to questions matching the standards
        answer_code:
          type: string
          example: offsted_rating:Requires Improvement
          description: coded answers to questions matching the standards
        supplementary_classification:
          type: array
          items:
            type: string
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/apprenticeship_qualification_questionnaire_standard.json
          description: coded answers to questions matching the standards
        supplementary_field:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
        document:
          "$ref": "#/components/schemas/Document"
      description: A managed set of qualification questions andwered at a point in
        time for a period of time
    Item:
      type: object
      required:
      - id
      - name
      properties:
        version_id:
          type: string
          example: 90ccab31-84fb-486c-84ba-77a66ff686ea
          description: UUID of this version of the entry
        supercedes_id:
          type: string
          example: e030f1b1-647d-4ed7-8d84-ac9790563362
          description: UUID of this version superceded. May be empty only if this
            is the  first version
        datetime:
          type: string
          format: date
          example: '2019-09-28T18:34:23.45Z'
          description: 'Date of creation or update of this record, date of creation
            of this version. '
        checksum:
          type: string
          example: 90b4c251f8649a4f9c86d6d20ee6e9e9
          description: MD5 checksum of the record
        url:
          type: string
          example: api.services.crowncommercial.gov.uk/api/Agreement/rm-RM1234
          description: URL which will retreive this version of the record
        id:
          type: string
          example: '07719842-a3a1-41c5-8320-6439295fb90e'
          description: " a generated UUID minted for this item "
        item_type_id:
          type: string
          example: CPV:37000000-8:CCS:2019-01:1
          description: " type of the item "
        unit_quantity:
          type: string
          example: '100'
          description: " define the units, which should match one of the allowed unit
            code valuesin the standard defind in the type"
        unit_price:
          type: number
          format: float
          example: 110
          description: an number giving the price per unit as dictated by item_type->unit
        supplementary:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
      description: Specifies the value of an item that is being offered for an agreement.
        All the data should be constrained according to the Item type in question
    Field:
      type: object
      required:
      - id
      - name
      properties:
        role_id:
          type: string
          description: 'Standard uri code that defines the role of the supplementary
            field, which should be prefixed by a standard id in the enclosing *Item
            type*, '
        type_id:
          type: string
          enum:
          - string
          - date
          - int
          - float
          example: string
          description: 'Type of the field - which should be appropriate for the role. '
        value:
          oneOf:
          - type: string
          - type: string
            format: date
          - type: number
            format: float
          - type: integer
          example: A descriptive string
      description: an additional field that helps qualify the object
    Document:
      type: object
      required:
      - id
      - name
      properties:
        storage:
          type: string
          enum:
          - s3
          - gdoc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/doc_storage_codes.json#gdoc
          description: ''
        role_standard:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/doc_storage_codes.json#ed_doc
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/doc_storage_codes.json#contract_doc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/doc_storage_codes.json#contract_doc
          description: ''
        role:
          type: array
          items:
            type: string
          example: ":signed_calloff"
          description: ''
        url:
          type: string
          example: gdoc:https://drive.google.com/drive/u/012345
          description: " Salesforce links to google drive folder for this supplier;
            we will move to S3 in due course. "
      description: ''
    Value:
      type: object
      required:
      - id
      - name
      properties:
        string:
          type: string
          example: Some text is here
          description: UTF8 string
        date:
          type: string
          format: date
          example: '2019-03-01'
          description: ''
        float:
          type: number
          format: float
          example: '1.23'
          description: ''
        int:
          type: integer
          example: '123'
          description: ''
      description: A supplementary value which can be any one of the below types.
        Only one will be set.
  parameters:
    q_name:
      name: q_name
      in: query
      description: optional search parameter
      schema:
        type: string
    q_id:
      name: q_id
      in: query
      description: optional search parameter
      schema:
        type: string
    q_keyword:
      name: q_keyword
      in: query
      description: optional search parameter
      schema:
        type: string
    q_title:
      name: q_title
      in: query
      description: optional search parameter
      schema:
        type: string
    q_version_id:
      name: q_version_id
      in: query
      description: optional search parameter
      schema:
        type: string
    q_supercedes_id:
      name: q_supercedes_id
      in: query
      description: optional search parameter
      schema:
        type: string
    id:
      name: id
      in: path
      required: true
      description: resource id parameter
      schema:
        type: string
    q_limit:
      name: q_limit
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 200
    q_skip:
      name: q_skip
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
  responses:
    Agreement:
      description: Agreement matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Agreement"
    Agreements:
      description: array of Agreements matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Agreement"
    ItemType:
      description: ItemType matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ItemType"
    ItemTypes:
      description: array of ItemTypes matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/ItemType"
    Party:
      description: Party matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Party"
    Partys:
      description: array of Partys matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Party"
    Contact:
      description: Contact matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Contact"
    Contacts:
      description: array of Contacts matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Contact"
    Questionnaire:
      description: Questionnaire matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Questionnaire"
    Questionnaires:
      description: array of Questionnaires matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Questionnaire"
    Offering:
      description: Offering matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Offering"
    Offerings:
      description: array of Offerings matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Offering"
