---
openapi: 3.0.4
servers:
- description: generated server for API::Endpoint
  url: api.services.crowncommercial.gov.uk
info:
  title: API::Endpoint
  description: genearated endpoint for data API::Endpoint
  version: 0.1.1
  contact:
    email: admin@ccs.gov.uk
  license:
    name: MIT
    url: https://github.com/Crown-Commercial-Service/ccs-data-model/blob/master/LICENSE
tags:
- name: browser
  description: for all users, typically buyers
- name: recorder
  description: for record updaters, often suppliers
paths:
  "/api/v0/Agreement":
    get:
      tags:
      - browser
      summary: search Agreement
      operationId: search-Agreement
      description: searches Agreement by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Agreements"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Agreement
      operationId: create-Agreement
      description: add a new Agreement and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the new Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/v0/Agreement/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Agreement
      description: retrieve Agreement by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) Agreement
      operationId: revise-Agreement
      description: update an existing Agreement given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the updated Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/v0/ItemType":
    get:
      tags:
      - browser
      summary: search ItemType
      operationId: search-ItemType
      description: searches ItemType by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/ItemTypes"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new ItemType
      operationId: create-ItemType
      description: add a new ItemType and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the new ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/v0/ItemType/{id}":
    get:
      tags:
      - recorder
      summary: get an existing ItemType
      description: retrieve ItemType by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) ItemType
      operationId: revise-ItemType
      description: update an existing ItemType given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the updated ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/v0/Item":
    get:
      tags:
      - browser
      summary: search Item
      operationId: search-Item
      description: searches Item by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Items"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Item
      operationId: create-Item
      description: add a new Item and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Item"
        description: body should be the new Item
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
  "/api/v0/Item/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Item
      description: retrieve Item by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) Item
      operationId: revise-Item
      description: update an existing Item given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Item"
        description: body should be the updated Item
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
  "/api/v0/Party":
    get:
      tags:
      - browser
      summary: search Party
      operationId: search-Party
      description: searches Party by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Partys"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Party
      operationId: create-Party
      description: add a new Party and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        description: body should be the new Party
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
  "/api/v0/Party/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Party
      description: retrieve Party by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) Party
      operationId: revise-Party
      description: update an existing Party given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Party"
        description: body should be the updated Party
      responses:
        '200':
          "$ref": "#/components/responses/Party"
        4XX:
          description: error TODO
  "/api/v0/Contact":
    get:
      tags:
      - browser
      summary: search Contact
      operationId: search-Contact
      description: searches Contact by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_title"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Contacts"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Contact
      operationId: create-Contact
      description: add a new Contact and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
        description: body should be the new Contact
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
  "/api/v0/Contact/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Contact
      description: retrieve Contact by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) Contact
      operationId: revise-Contact
      description: update an existing Contact given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Contact"
        description: body should be the updated Contact
      responses:
        '200':
          "$ref": "#/components/responses/Contact"
        4XX:
          description: error TODO
  "/api/v0/Offering":
    get:
      tags:
      - browser
      summary: search Offering
      operationId: search-Offering
      description: searches Offering by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Offerings"
        4XX:
          description: error TODO
    post:
      tags:
      - recorder
      summary: post (create) a new Offering
      operationId: create-Offering
      description: add a new Offering and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Offering"
        description: body should be the new Offering
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
  "/api/v0/Offering/{id}":
    get:
      tags:
      - recorder
      summary: get an existing Offering
      description: retrieve Offering by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
    put:
      tags:
      - recorder
      summary: put (revise) Offering
      operationId: revise-Offering
      description: update an existing Offering given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Offering"
        description: body should be the updated Offering
      responses:
        '200':
          "$ref": "#/components/responses/Offering"
        4XX:
          description: error TODO
components:
  schemas:
    Agreement:
      type: object
      required:
      - id
      - name
      properties:
        kind:
          type: string
          enum:
          - framework
          - lot
          - contract
          description: Kind of agreement, such as Framework, Lot,Contract. Lots are
            considered separateagreements, but link to their owning framework agreement.
            Similarly Contracts should link to anylot that they are based on. See
            https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_type_codes
            for details.
        id:
          type: string
          example: rm:RM3541
          description: id of agreeement; This is the RM number for a framework, and
            {RM#lotnumber} for a lot
        id_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_scheme#ccs_fw_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_scheme#lot_number
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_scheme#cf_contract_id
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_id_scheme#ccs_fw_id
          description: who to identify the agreement
        keyword:
          type: array
          items:
            type: string
          description: other names for the agreement
        name:
          type: string
          description: ''
        long_name:
          type: string
          description: ''
        version:
          type: string
          description: semantic version id of the agreement model, in the form X.Y.Z
        status:
          type: string
          enum:
          - live
          - inactive
          - future
          - planned
          - underway
          - withdrawn
          - ended
          description: current status of agreementSee https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/agreement_status_codes
            for details.
        pillar:
          type: string
          description: ''
        duration:
          type: integer
          description: Months
        category:
          type: string
          description: ''
        start_date:
          type: string
          format: date
          description: ''
        end_date:
          type: string
          format: date
          description: ''
        original_end_date:
          type: string
          format: date
          description: ''
        description:
          type: string
          description: Describe the agreement
        part_of_id:
          type: string
          description: Agreement this is part of, applicable only to Lots
        conforms_to_id:
          type: string
          description: Agreement this conforms to, such as a Contract conforming to
            a Framework
        item_type:
          type: array
          items:
            "$ref": "#/components/schemas/ItemType"
        supplier_qualification_scheme:
          type: array
          items:
            type: string
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/apprenticeship_qualification_questionnaire_scheme
          description: schemes describing coding for suppliers qualification questionnaires
        min_value:
          type: integer
          description: Minimum value of award, in pounds sterling
        max_value:
          type: integer
          description: Maximum value of award, in pounds sterling
      description: General definition of Commercial Agreements
    ItemType:
      type: object
      required:
      - id
      - name
      properties:
        sector_scheme:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/sector_scheme#ccs
          example: ccsscheme
          description: The sector scheme id
        sector_id:
          type: array
          items:
            type: string
          example: ccsscheme:education_funded
          description: The sector scheme ids that define to whom the item may be sold.
            Prefix must match one of the schemes.
        location_scheme:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#nuts_2016
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#postcode_raius
          example: "[https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#nuts_2016]"
          description: The schemes for identifying locations
        location_id:
          type: array
          items:
            type: string
          example: "[UKH1, UKG2]"
          description: The location scheme ids that defines  where the items can be
            offered.
        id:
          type: string
          example: CPV:37000000-8:CCS:2019-01:1
          description: The composite code string, which must be unique across all
            schemesThis should be prefixed tith ethe primary classification code
        description:
          type: string
          description: long description
        keyword:
          type: array
          items:
            type: string
          description: alternate names for the item type
        classification_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpv
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpvs
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#gsin
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#unspsc
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpv
          description: The classiciation scheme id, which links to an entry in item_classification_schemesthe
            item's id must be prefixed correctly for the classification, and be unique
        classification:
          type: string
          example: CPV:37000000-8
          description: Code within the primary scheme defining this type. Each code
            should have a prefix identifying the scheme
        additional_classification_schemes:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpv
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpvs
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#gsin
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#unspsc
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/item_scheme#cpc
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/course_related_codes
          description: Additional ways to classify the item
        additional_classifications:
          type: array
          items:
            type: string
          example: CPV:37000000-8
          description: Code within the primary scheme defining this type. Each code
            should have a prefix identifying the scheme
        unit_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_scheme#uncefact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_scheme#qudt
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/unit_scheme#qudt
          description: " define the unit scheme, from the schemes in unit_classification_schemes "
        unit:
          type: string
          example: qudt:unit:SquareMeterPerKelvin
          description: define the units, based on the unit scheme selected
        currency:
          type: string
          example: GBP
          description: define the currency of the per-unit-price, as ISO 4217 currency
            code. If absent, presume GDP,
      description: Defines the items that can be offered in any selected agreementsAgreements
        hava a number of items that can have values defining the agreement. The Items
        shouldconstrain the key quantifiable elements of an agreement award. A supplier
        may provide additionalvariable facts in their Offer to supplement the description
        of how they support the agreement.
    Item:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          example: '07719842-a3a1-41c5-8320-6439295fb90e'
          description: " a generated UUID minted for this item "
        item_type_id:
          type: string
          example: CPV:37000000-8:CCS:2019-01:1
          description: " type of the item "
        unit_quantity:
          type: string
          example: '100'
          description: " define the units, which should match one of the allowed unit
            code valuesin the scheme defind in the type"
        unit_price:
          type: number
          format: float
          example: 110
          description: an number giving the price per unit as dictated by item_type->unit
        supplementary:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
      description: Specifies the value of an item that is being offered for an agreement.
        All the data should be constrained according to the Item type in question
    Party:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          description: " URN, should match salesforce ID; master key "
        org_id_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#sf_org_id
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#companies_house
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#dun
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#dfe
          description: ''
        supplementary_org_id_schemens:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#sf_org_id
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#companies_house
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#dun
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/org_id_scheme#dfe
          description: ''
        supplementary_org_id:
          type: array
          items:
            type: string
          description: ''
        parent_org_id:
          type: string
          description: " URN, should match one of the schemes listed "
        org_name:
          type: string
          description: ''
        sector_scheme:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/sector_scheme#ccs
          description: ''
        sector:
          type: array
          items:
            type: string
          example: " ccs_sector : education_funded "
          description: ''
        trading_name:
          type: string
          description: " Salesforce only stores for supplier "
        spend_this_year:
          type: number
          format: float
          description: "\n                                                                                                                                                                                                                                                                                                                                                                   Salesforce
            only stores for buyer "
        documents_url:
          type: string
          description: "\n                                                                                                                                                                                                                                                                                                                                                                                            Salesforce
            links to google drive for this supplier;\n                                                                                                                                                                                                                                                                                                                                                                                                                               we
            will move to S3 in due course "
        contact_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#sf_contact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#email
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#sf_contact
          description: ''
        account_manager_id:
          type: string
          description: " Who manages the account for CCS "
      description: The party is used to identify buyers and suppliers. Since some
        organisations act asboth buyers and suppliers we use the same record for both,
        but most organisations willbe one or the other. The onvolvement of the party
        with an agreement determine  the role inthat contenxt.
    Contact:
      type: object
      required:
      - id
      - name
      properties:
        contact_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#sf_contact
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#email
          example: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#sf_contact
          description: ''
        id:
          type: string
          description: " a newly minted UUID for CMp "
        supplementary_contact_id_schemens:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#sf_contact
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/contact_id_scheme#email
          description: ''
        supplementary_contact_id:
          type: array
          items:
            type: string
          description: ''
        party_id:
          type: string
          description: "\ncontact
            is a link for this party "
        role:
          type: array
          items:
            type: string
          description: "\nrole
            for CMp "
        first_name:
          type: string
          description: ''
        last_name:
          type: string
          description: ''
        title:
          type: string
          description: "\nalesforce;
            not sure what the constrainst are "
        job_title:
          type: string
          description: " Salesforce; free text "
        department:
          type: string
          description: " Salesforce - department within org, rather than gov "
        address:
          "$ref": "#/components/schemas/Address"
        phone:
          type: array
          items:
            type: string
          description: " phone of the contact point; salesforce only supports one "
        email:
          type: array
          items:
            type: string
          description: " email of the contact point; salesforce only supports two "
        origin:
          type: string
          description: " from Salesforce - where the data was entered "
        notes:
          type: string
          description: " from Salesforce "
        status:
          type: string
          description: " from Salesforce, 'Active' "
        user_research_participane:
          type: string
          description: " Y / N : from Salesforce "
        not_to_receive_ccs_emails:
          type: string
          description: " Y / N : from Salesforce "
        contact_owner:
          type: string
          description: " from Salesforce "
      description: "\n
        way of contacting a party.Store contacts in a safe identity store.Do not store
        personal details elsewhere.\n
    Offering:
      type: object
      required:
      - id
      - name
      properties:
        sector_scheme:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/sector_scheme#ccs
          example: ccsscheme
          description: The sector scheme id
        sector_id:
          type: array
          items:
            type: string
          example: ccsscheme:education_funded
          description: The sector scheme ids that define to whom the item may be sold.
            Prefix must match one of the schemes.
        location_scheme:
          type: array
          items:
            type: string
            enum:
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#nuts_2016
            - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#postcode_raius
          example: "[https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/location_scheme#nuts_2016]"
          description: The schemes for identifying locations
        location_id:
          type: array
          items:
            type: string
          example: "[UKH1, UKG2]"
          description: The location scheme ids that defines  where the items can be
            offered.
        agreement_id:
          type: string
          description: The agreement this offering relates to
        supplier_id:
          type: string
          example: comphouse:12345678
          description: ''
        id:
          type: string
          description: unique id for the offering across all offerings, suppliers
            and frameworks
        name:
          type: string
          description: ''
        description:
          type: string
          description: ''
        item:
          type: array
          items:
            "$ref": "#/components/schemas/Item"
        supplementary:
          type: array
          items:
            "$ref": "#/components/schemas/Field"
          example: education_ratings_scheme:course_start_date
        branch:
          type: array
          items:
            type: string
          description: where the offering can occur; contact should include address
            details
      description: " Supplier offering against an item or items of an agreement.This
        may be extended for different agreements. A supplier may provide additionalvariable
        facts in their Offer to supplement the description of how they support the
        agreement. "
    Field:
      type: object
      required:
      - id
      - name
      properties:
        id:
          type: string
          description: ''
        role_id:
          type: string
          example: educ
          description: Scheme uri code taht defines the role of the supplementary
            field, which should be prefixed by a scheme id in the enclosing type
        type_scheme:
          type: string
          enum:
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#string
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#date
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#int
          - https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#float
          example: &2 !ruby/object:ReferenceData::Code
            name: :code
            domain: &1 !ruby/object:ReferenceData::CodeList
              name: :codelist
              domain: !ruby/object:ReferenceData
                contents:
                  :codelist:
                  - *1
                name: :SupplementaryDataTypeCodes
              attributes:
                :id: :supplementary_data_type_codes
                :version: !ruby/object:Semantic::Version
                  major: 0
                  minor: 1
                  patch: 1
                  pre: 
                  build: 
                  version: 0.1.1
                :url: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes
                :title: SupplementaryDataType
                :description: Identify the types in supplementary data of a filter
                :code:
                - *2
                - !ruby/object:ReferenceData::Code
                  name: :code
                  domain: *1
                  attributes:
                    :id: :date
                    :uri: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#date
                    :title: date filter
                    :description: supplementary is a date in iso 860 format.
                  container: *1
                - !ruby/object:ReferenceData::Code
                  name: :code
                  domain: *1
                  attributes:
                    :id: :int
                    :uri: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#int
                    :title: integer filter
                    :description: supplementary is a signed int in 64 bit range.
                  container: *1
                - !ruby/object:ReferenceData::Code
                  name: :code
                  domain: *1
                  attributes:
                    :id: :float
                    :uri: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#float
                    :title: floating point numbner filter
                  container: *1
            attributes:
              :id: :string
              :uri: https://github.com/Crown-Commercial-Service/ccs-data-model/tree/master/gen/reference_data/v0/supplementary_data_type_codes#string
              :title: string filter
              :description: supplementary is a unicode UTF8 encoded string of indeterminate
                lengh, but no more than 10k in size.
            container: *1
          description: type scheme should be appropriate for the filter scheme
        value:
          "$ref": "#/components/schemas/Value"
          example: A descriptive string
      description: an additional field that helps qualify the object
    Address:
      type: object
      required:
      - id
      - name
      properties:
        street:
          type: string
          description: ''
        address_2:
          type: string
          description: ''
        town:
          type: string
          description: ''
        county:
          type: string
          description: ''
        country:
          type: string
          description: ''
        postcode:
          type: string
          description: ''
        latitutde:
          type: string
          description: " Location from the address for geo search "
        longtitude:
          type: string
          description: "\nocation
            from the address for geo search "
      description: "\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     Address
        should include at least address line 1 and ideally post code.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         will
        contain lat / long if we have derived it.\n
    Value:
      type: object
      required:
      - id
      - name
      properties:
        string:
          type: string
          example: Some text is here
          description: UTF8 string
        date:
          type: string
          format: date
          example: '2019-03-01'
          description: ''
        float:
          type: number
          format: float
          example: '1.23'
          description: ''
        int:
          type: integer
          example: '123'
          description: ''
      description: A supplementary value which can be any one of the below types.
        Only one will be set.
  parameters:
    q_name:
      name: q_name
      in: query
      description: optional search parameter
      schema:
        type: string
    q_id:
      name: q_id
      in: query
      description: optional search parameter
      schema:
        type: string
    q_keyword:
      name: q_keyword
      in: query
      description: optional search parameter
      schema:
        type: string
    q_title:
      name: q_title
      in: query
      description: optional search parameter
      schema:
        type: string
    id:
      name: id
      in: path
      required: true
      description: resource id parameter
      schema:
        type: string
    q_limit:
      name: q_limit
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 200
    q_skip:
      name: q_skip
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
  responses:
    Agreement:
      description: Agreement matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Agreement"
    Agreements:
      description: array of Agreements matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Agreement"
    ItemType:
      description: ItemType matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ItemType"
    ItemTypes:
      description: array of ItemTypes matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/ItemType"
    Item:
      description: Item matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Item"
    Items:
      description: array of Items matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Item"
    Party:
      description: Party matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Party"
    Partys:
      description: array of Partys matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Party"
    Contact:
      description: Contact matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Contact"
    Contacts:
      description: array of Contacts matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Contact"
    Offering:
      description: Offering matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Offering"
    Offerings:
      description: array of Offerings matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Offering"
