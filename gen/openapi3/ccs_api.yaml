---
openapi: 3.0.4
servers:
- description: generated server for API::Endpoint
  url: ccs.gov.uk
info:
  title: API::Endpoint
  description: genearated endpoint for data API::Endpoint
  version: 0.1.0
  contact:
    email: admin@ccs.gov.uk
  license:
    name: MIT
    url: https://github.com/Crown-Commercial-Service/ccs-data-model/blob/master/LICENSE
tags:
- name: browser
  description: for all users, typically buyers
- name: recorder
  description: for record updaters, often suppliers
paths:
  "/api/Agreement":
    get:
      summary: redirect for search
      tags:
      - browser
      operationId: search-Agreement
      description: searches Agreement by name, id or keyword
      responses:
        '302':
          description: Redirect to the latest semantic version API
  "/api/v0/Agreement":
    get:
      summary: search
      tags:
      - browser
      operationId: search-Agreement
      description: searches Agreement by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_name"
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Agreements"
        4XX:
          description: error TODO
    post:
      summary: put
      tags:
      - recorder
      operationId: create-Agreement
      description: add a new Agreement and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the new Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/v0/Agreement/{id}":
    get:
      summary: get a Agreement
      tags:
      - recorder
      description: retrieve Agreement by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
    post:
      summary: post
      tags:
      - recorder
      operationId: revise-Agreement
      description: update an existing Agreement given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Agreement"
        description: body should be the updated Agreement
      responses:
        '200':
          "$ref": "#/components/responses/Agreement"
        4XX:
          description: error TODO
  "/api/ItemType":
    get:
      summary: redirect for search
      tags:
      - browser
      operationId: search-ItemType
      description: searches ItemType by name, id or keyword
      responses:
        '302':
          description: Redirect to the latest semantic version API
  "/api/v0/ItemType":
    get:
      summary: search
      tags:
      - browser
      operationId: search-ItemType
      description: searches ItemType by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_id"
      - "$ref": "#/components/parameters/q_keyword"
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/ItemTypes"
        4XX:
          description: error TODO
    post:
      summary: put
      tags:
      - recorder
      operationId: create-ItemType
      description: add a new ItemType and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the new ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/v0/ItemType/{id}":
    get:
      summary: get a ItemType
      tags:
      - recorder
      description: retrieve ItemType by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
    post:
      summary: post
      tags:
      - recorder
      operationId: revise-ItemType
      description: update an existing ItemType given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/ItemType"
        description: body should be the updated ItemType
      responses:
        '200':
          "$ref": "#/components/responses/ItemType"
        4XX:
          description: error TODO
  "/api/Item":
    get:
      summary: redirect for search
      tags:
      - browser
      operationId: search-Item
      description: searches Item by name, id or keyword
      responses:
        '302':
          description: Redirect to the latest semantic version API
  "/api/v0/Item":
    get:
      summary: search
      tags:
      - browser
      operationId: search-Item
      description: searches Item by name, id or keyword
      parameters:
      - "$ref": "#/components/parameters/q_limit"
      - "$ref": "#/components/parameters/q_skip"
      responses:
        '200':
          "$ref": "#/components/responses/Items"
        4XX:
          description: error TODO
    post:
      summary: put
      tags:
      - recorder
      operationId: create-Item
      description: add a new Item and retreive copy of it
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Item"
        description: body should be the new Item
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
  "/api/v0/Item/{id}":
    get:
      summary: get a Item
      tags:
      - recorder
      description: retrieve Item by id
      parameters:
      - "$ref": "#/components/parameters/id"
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
    post:
      summary: post
      tags:
      - recorder
      operationId: revise-Item
      description: update an existing Item given its id
      parameters:
      - "$ref": "#/components/parameters/id"
      requestBody:
        content:
          application/json:
            schema:
              "$ref": "#/components/schemas/Item"
        description: body should be the updated Item
      responses:
        '200':
          "$ref": "#/components/responses/Item"
        4XX:
          description: error TODO
components:
  schemas:
    Agreement:
      type: object
      required:
      - id
      - name
      properties:
        :kind:
          type: string
          enum:
          - framework
          - lot
          - contract
        :id:
          type: string
          example: RM3541
        :keyword:
          type: array
          items:
            type: string
        :name:
          type: string
        :long_name:
          type: string
        :version:
          type: string
        :status:
          type: string
          enum:
          - live
          - inactive
          - future
          - planned
          - underway
          - withdrawn
          - ended
        :pillar:
          type: string
        :duration:
          type: integer
        :category:
          type: string
        :start_date:
          type: string
          format: date
        :end_date:
          type: string
          format: date
        :original_end_date:
          type: string
          format: date
        :description:
          type: string
        :offerType:
          type: string
        :part_of_id:
          type: string
        :conforms_to_id:
          type: string
        :item_type:
          type: array
          items:
            "$ref": "#/components/schemas/ItemType"
        :min_value:
          type: integer
        :max_value:
          type: integer
    ItemType:
      type: object
      required:
      - id
      - name
      properties:
        :id:
          type: string
        :description:
          type: string
        :keyword:
          type: array
          items:
            type: string
        :scheme_id:
          type: array
          items:
            type: string
            enum:
            - cpv
            - cpvs
            - gsin
            - unspsc
            - cpc
          example: CPV
        :code:
          type: array
          items:
            type: string
          example: CPV:37000000-8
        :unit_scheme:
          type: string
          enum:
          - reference.services.crowncommercial.gov.uk/v0.1/unit_scheme#uncefact
          - reference.services.crowncommercial.gov.uk/v0.1/unit_scheme#qudt
          example: QUDT
        :unit:
          type: string
          example: QUDT:unit:SquareMeterPerKelvin
        :sector_scheme:
          type: array
          items:
            type: string
            enum:
            - ccs
          example: ccsscheme
        :sector_id:
          type: array
          items:
            type: string
          example: ccsscheme:education_funded
    Item:
      type: object
      required:
      - id
      - name
      properties:
        :type_id:
          type: string
        :unit:
          type: string
        :value:
          type: string
  parameters:
    q_name:
      name: q_name
      in: query
      description: optional search parameter
      schema:
        type: string
    q_id:
      name: q_id
      in: query
      description: optional search parameter
      schema:
        type: string
    q_keyword:
      name: q_keyword
      in: query
      description: optional search parameter
      schema:
        type: string
    q_title:
      name: q_title
      in: query
      description: optional search parameter
      schema:
        type: string
    id:
      name: id
      in: path
      required: true
      description: optional id parameter
      schema:
        type: string
    q_limit:
      name: q_limit
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
        maximum: 200
    q_skip:
      name: q_skip
      in: query
      description: optional control parameter
      schema:
        type: integer
        format: int32
        minimum: 0
  responses:
    Agreement:
      description: Agreement matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Agreement"
    Agreements:
      description: array of Agreements matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Agreement"
    ItemType:
      description: ItemType matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/ItemType"
    ItemTypes:
      description: array of ItemTypes matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/ItemType"
    Item:
      description: Item matching id
      content:
        application/json:
          schema:
            "$ref": "#/components/schemas/Item"
    Items:
      description: array of Items matching id
      content:
        application/json:
          schema:
            type: array
            items:
              "$ref": "#/components/schemas/Item"
